{"version":3,"sources":["logo.svg","Components/GifImage.jsx","Components/Title.jsx","Components/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["GifImage","this","props","help","src","Component","Title","title","Search","handleSubmit","event","a","preventDefault","character","state","userInput","console","log","url","fetch","response","json","data","index","Math","floor","random","setState","info","images","downsized","info2","info3","handleChange","e","target","value","className","action","onSubmit","type","name","onChange","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,I,+DCaAA,E,4JATX,WACI,OACI,8BACKC,KAAKC,MAAMC,KAAO,8BAAK,qBAAKC,IAAKH,KAAKC,MAAMC,SAAc,W,GALpDE,aCYRC,E,4JAXX,WACI,OACI,gCACI,sDACA,0CACA,6BAAKL,KAAKC,MAAMK,e,GANZF,aC6DLG,E,kDA1DX,aAAc,IAAD,8BACT,gBAUJC,aAXa,uCAWE,WAAOC,GAAP,uBAAAC,EAAA,6DACXD,EAAME,iBACAC,EAAY,EAAKC,MAAMC,UAE7BC,QAAQC,IAAI,aAAcJ,GACpBK,EALK,0FAKoFL,EALpF,yDAQgBM,MAAMD,GARtB,cAQDE,EARC,iBASYA,EAASC,OATrB,QASDC,EATC,OAUHC,EAAQC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC5B,EAAKC,SAAS,CAACC,KAAKN,EAAKA,KAAKC,GAAOM,OAAOC,UAAUZ,MACtD,EAAKS,SAAS,CAACI,MAAMT,EAAKA,KAAK,GAAGO,OAAOC,UAAUZ,MACnD,EAAKS,SAAS,CAACK,MAAMV,EAAKA,KAAK,GAAGO,OAAOC,UAAUZ,MACnD,EAAKS,SAAS,CAACpB,MAAMe,EAAKA,KAAKC,GAAOhB,QACtCS,QAAQC,IAAI,EAAKH,MAAMc,MAfhB,2EAkBA,aAlBA,0DAXF,wDAiCbK,aAAe,SAACC,GACZ,EAAKP,SAAS,CAACZ,UAAYmB,EAAEC,OAAOC,SAhCpC,EAAKtB,MAAM,CACPc,KAAM,KACNb,UAAU,GACVgB,MAAO,KACPC,MAAO,KACPzB,MAAM,MAPD,E,0CAsCb,WACI,OACI,gCACI,2BACA,sBAAK8B,UAAU,QAAf,UAAuB,cAAC,EAAD,CAAUlC,KAAMF,KAAKa,MAAMc,KAAMS,UAAU,QAAlE,OACA,uBAAMC,OAAO,GAAGC,SAAUtC,KAAKQ,aAA/B,UACI,uBAAO+B,KAAK,OAAOC,KAAK,SAASL,MAAOnC,KAAKa,MAAMC,UAAW2B,SAAUzC,KAAKgC,aAAcU,YAAY,mBACvG,wBAAQH,KAAK,SAAb,yBAIJ,cAAC,EAAD,CAAOjC,MAAON,KAAKa,MAAMP,QACzB,kC,GAnDKF,aCQNuC,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCKSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e26877e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n\nclass GifImage extends Component {\n    \n    render() {\n        return (\n            <div>\n                {this.props.help ? <div><img src={this.props.help}/></div>:null}\n            </div>\n        );\n    }\n}\n\nexport default GifImage;","import React, { Component } from 'react';\n\nclass Title extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Random Gif Generator</h1>\n                <h3>by Chazz</h3>\n                <h4>{this.props.title}</h4>\n            </div>\n        );\n    }\n}\n\nexport default Title;","import React, { Component } from 'react';\nimport GifImage from './GifImage';\nimport Title from './Title';\n// this component serves as the form \nclass Search extends Component {\n    constructor(){\n        super()\n        this.state={\n            info: null,\n            userInput:'',\n            info2: null,\n            info3: null,\n            title:null,\n        }\n    }\n\n    handleSubmit = async (event)=>{\n        event.preventDefault()\n        const character = this.state.userInput\n       \n        console.log(\"submitted \"+ character)\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=kSRfXgwbzEaX6F8BuWaoKoHFN6zcbKaX&q=${character}&limit=25&offset=0&rating=g&lang=en`\n\n        try{\n            const response = await fetch(url)\n            const data = await response.json()\n            var index = Math.floor(Math.random() * 25);\n            this.setState({info:data.data[index].images.downsized.url})\n            this.setState({info2:data.data[1].images.downsized.url})\n            this.setState({info3:data.data[2].images.downsized.url})\n            this.setState({title:data.data[index].title})\n            console.log(this.state.info)\n        }\n        catch(err){\n            return \"try again\"\n        }\n    }  \n\n    handleChange = (e) =>{\n        this.setState({userInput : e.target.value})\n    }\n\n\n    render() {\n        return (\n            <div>\n                <header></header>\n                <div className=\"frame\"><GifImage help={this.state.info} className=\"gif\"/> </div>\n                <form action=\"\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"search\" value={this.state.userInput} onChange={this.handleChange} placeholder=\"search by name\"/>\n                    <button type=\"submit\">  Search</button>\n                </form>\n                {/* <GifImage help={this.state.info2}/>\n                <GifImage help={this.state.info3}/> */}\n                <Title title={this.state.title} />\n                <footer></footer>\n\n                \n            </div>\n        );\n    }\n}\n\nexport default Search;","import logo from './logo.svg';\nimport './App.css';\nimport Search from './Components/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}